# Patch generated by Pyment v0.3.3

--- a/api.py
+++ b/api.py
@@ -25,6 +25,7 @@


 class BroadoworksAPI(Class):
+    """ """
     session = Field(type=str)
     host = Field(type=str, required=True)
     port = Field(type=int, default=2208)
@@ -38,6 +39,7 @@
     instream = Field(type=object, default=None)

     def on_init(self):
+        """ """
         if self.session is None:
             self.session = str(uuid.uuid4())
         if self.logger is None:
@@ -46,6 +48,7 @@
         self.connected = False

     def build_despatch_table(self):
+        """ """
         self.logger.debug("Building Broadworks despatch table")
         despatch_table = {}
         for module in (broadworks_ocip.responses, broadworks_ocip.requests):
@@ -65,6 +68,7 @@
         self.logger.debug("Built Broadworks despatch table")

     def configure_logger(self):
+        """ """
         logger = logging.getLogger("broadworks_api")
         logger.setLevel(logging.DEBUG)
         console_handler = logging.StreamHandler(sys.stdout)
@@ -74,6 +78,12 @@
         self.logger = logger

     def get_command_xml(self, command, **kwargs):
+        """
+
+        :param command:
+        :param **kwargs:
+
+        """
         try:
             cls = self.despatch_table[command]
         except KeyError as e:
@@ -83,12 +93,19 @@
         return cmd._build_xml(self.session)

     def send_command(self, command, **kwargs):
+        """
+
+        :param command:
+        :param **kwargs:
+
+        """
         self.logger.info(f">>> {command}")
         xml = self.get_command_xml(command, **kwargs)
         self.logger.debug(f"SEND: {str(xml)}")
         self.socket.sendall(xml + b"\n")

     def receive_response(self):
+        """ """
         content = b""
         while True:
             line = self.instream.readline()
@@ -99,6 +116,11 @@
         return self.decode_xml(content)

     def decode_xml(self, xml):
+        """
+
+        :param xml:
+
+        """
         root = etree.fromstring(xml)
         if root.tag != "{C}BroadsoftDocument":
             raise ValueError
@@ -113,6 +135,7 @@
                 return result

     def connect(self):
+        """ """
         self.logger.debug(f"Attempting connection host={self.host} port={self.port}")
         try:
             address = (self.host, self.port)
@@ -127,6 +150,7 @@
         self.connected = True

     def authenticate(self):
+        """ """
         self.send_command("AuthenticationRequest", user_id=self.username)
         resp = self.receive_response()
         authhash = hashlib.sha1(self.password.encode()).hexdigest().lower()
@@ -139,12 +163,19 @@
         resp = self.receive_response()

     def command(self, command, **kwargs):
+        """
+
+        :param command:
+        :param **kwargs:
+
+        """
         if not self.connected:
             self.connect()
         self.send_command(command, **kwargs)
         return self.receive_response()

     def close(self):
+        """ """
         if self.connected:
             self.send_command(
                 "LogoutRequest", user_id=self.username, reason="Connection close",
